<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.catdog.mapper.ProductMapper">

    <resultMap id="productMap" type="ProductVO">
        <result property="product_no" column="product_no"/>
        <result property="user_id" column="user_id"/>
        <result property="category1_no" column="category1_no"/>
        <result property="product_name" column="product_name"/>
        <result property="product_stock" column="product_stock"/>
        <result property="product_content" column="product_content"/>
        <result property="product_price" column="product_price"/>
        <result property="product_regdate" column="product_regdate"/>
    </resultMap>

<!--    <select id="selectAll" resultMap="productMap">-->
<!--        SELECT * FROM product ORDER BY product_no DESC-->
<!--    </select>-->

    <select id="findById" resultMap="productMap">
        SELECT * FROM product
        WHERE product_no = #{product_no}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="product_no">
        INSERT INTO product (user_id, category1_no, product_name, product_stock, product_content, product_price)
        VALUES (#{user_id}, #{category1_no}, #{product_name}, #{product_stock}, #{product_content}, #{product_price})
    </insert>

    <update id="update">
        UPDATE product
        SET category1_no = #{category1_no}, product_name = #{product_name}, product_stock = #{product_stock},
            product_content = #{product_content}, product_price = #{product_price}
        WHERE product_no = #{product_no}
    </update>

    <delete id="delete">
        DELETE FROM product
        WHERE product_no = #{product_no}
    </delete>

    <select id="orderByReviewCount" resultMap="productMap">
        SELECT a.*
        FROM catdog.product AS a
                 LEFT JOIN (SELECT product_no, count(review_no) AS count FROM catdog.review GROUP BY product_no) AS b
                           ON a.product_no = b.product_no
        ORDER BY b.count DESC, a.product_no DESC;
    </select>

    <select id="orderByReviewScore" resultMap="productMap">
        SELECT a.*
        FROM catdog.product AS a
                 LEFT JOIN (SELECT product_no, avg(review_score) AS score FROM catdog.review GROUP BY product_no) AS b
                           ON a.product_no = b.product_no
        ORDER BY b.score DESC, a.product_no DESC LIMIT 5;
    </select>

    <select id="selectAll" resultMap="productMap">
        SELECT a.*
        FROM catdog.product AS a
        <include refid="review"></include>
        <include refid="category"></include>
        <include refid="sort"></include>
    </select>

    <sql id="category">
        <where>
            <if test="category1_no != null and category1_no == category1_no">
                category1_no = #{category1_no}
            </if>
        </where>
    </sql>

    <sql id="sort">
        <if test="sort != null and sort == '낮은가격순'">
            ORDER BY product_price ASC
        </if>
        <if test="sort != null and sort == '높은가격순'">
            ORDER BY product_price DESC
        </if>
        <if test="sort != null and sort == '등록일순'">
            ORDER BY product_regdate DESC
        </if>
        <if test="sort != null and sort == '판매량순'">
            ORDER BY product_ DESC
        </if>
        <if test="sort != null and sort == '리뷰많은순'">
            ORDER BY b.count DESC
        </if>
        <if test="sort != null and sort == '리뷰좋은순'">
            ORDER BY b.score DESC
        </if>
    </sql>

    <sql id="review">
        <if test="sort != null and sort == '리뷰많은순'">
            LEFT JOIN (SELECT product_no, count(review_no) AS count FROM catdog.review GROUP BY product_no) AS b
            ON a.product_no = b.product_no
        </if>
        <if test="sort != null and sort == '리뷰좋은순'">
            LEFT JOIN (SELECT product_no, avg(review_score) AS score FROM catdog.review GROUP BY product_no) AS b
            ON a.product_no = b.product_no
        </if>
    </sql>
</mapper>